name: Deploy terraform

on:
  push:
    branches: [ master ]
  pull_request:
    branches: [ master ]

jobs:

  build:

    runs-on: ubuntu-latest
    env:
      ARM_CLIENT_ID: ${{ secrets.AZURE_CLIENT_ID }}
      ARM_CLIENT_SECRET: ${{ secrets.AZURE_CLIENT_SECRET }}
      ARM_SUBSCRIPTION_ID: ${{ secrets.AZURE_SUBSCRIPTION_ID }}
      ARM_TENANT_ID: ${{ secrets.AZURE_TENANT_ID }}

    steps:
    - uses: actions/checkout@v2
  
    - name: 'Login via Azure CLI'
      uses: azure/login@v1
      with:
        creds: ${{ secrets.AZURE_CREDENTIALS }}
        
    - uses: azure/docker-login@v1
      with:
        login-server: markushtesti.azurecr.io
        username: ${{ secrets.REGISTRY_USERNAME }}
        password: ${{ secrets.REGISTRY_PASSWORD }}
    - run: |
        docker build . --file dockerfile --tag markushtesti.azurecr.io/petclinic:${{ github.sha }}
        docker push markushtesti.azurecr.io/petclinic:${{ github.sha }}
            
    # Install the latest version of Terraform CLI and configure the Terraform CLI configuration file with a Terraform Cloud user API token 
    - name: Setup Terraform
      uses: hashicorp/setup-terraform@v1

    # Initialize a new or existing Terraform working directory by creating initial files, loading any remote state, downloading modules, etc.
    - name: Terraform Init
      run: terraform init
      env:
          TF_VAR_registry_server: markushtesti.azurecr.io
          TF_VAR_registry_username: ${{ secrets.REGISTRY_USERNAME }}
          TF_VAR_registry_password: ${{ secrets.REGISTRY_PASSWORD }}
          TF_VAR_image_id: markushtesti.azurecr.io/petclinic:${{ github.sha }}

    - name: Terraform Validate
      run: terraform validate

    # Generates an execution plan for Terraform
    - name: Terraform Plan
      run: terraform plan
      env:
          TF_VAR_registry_server: markushtesti.azurecr.io
          TF_VAR_registry_username: ${{ secrets.REGISTRY_USERNAME }}
          TF_VAR_registry_password: ${{ secrets.REGISTRY_PASSWORD }}
          TF_VAR_image_id: markushtesti.azurecr.io/petclinic:${{ github.sha }}
          
      # On push to master, build or change infrastructure according to Terraform configuration files
      # Note: It is recommended to set up a required "strict" status check in your repository for "Terraform Cloud". See the documentation on "strict" required status checks for more information: https://help.github.com/en/github/administering-a-repository/types-of-required-status-checks
    - name: Terraform Apply
      if: github.ref == 'refs/heads/master' && github.event_name == 'push'
      run: terraform apply -auto-approve
      env:
          TF_VAR_registry_server: markushtesti.azurecr.io
          TF_VAR_registry_username: ${{ secrets.REGISTRY_USERNAME }}
          TF_VAR_registry_password: ${{ secrets.REGISTRY_PASSWORD }}
          TF_VAR_image_id: markushtesti.azurecr.io/petclinic:${{ github.sha }}
